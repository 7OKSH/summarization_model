1
1 SOFTWARE ENGINEERING by Ian Sommerville 10th Edition Pearson 2015 2 Chapter 1 Introduction Lecture 1 3 Topics covered Professional software development What is meant by software engineering Software engineering ethics A brief introduction to ethical issues that affect software engineering Case studies An introduction to three examples that are used in later chapters in the book Chapter 1 Introduction 3 4 Software engineering The economies of all developed nations are dependent on software More and more systems are software controlled Software engineering is concerned with theories methods and tools for professional software development Software engineering involves wider responsibilities than simply the application of technical skills 5 Software engineering Software engineering is an engineering discipline that is concerned with all aspects of software production from the early stages of system specification through to maintaining the system after it has gone into use Engineering discipline Using appropriate theories and methods to solve problems bearing in mind organizational and financial constraints All aspects of software production Not just technical process of development Also project management and the development of tools methods etc to support software production Chapter 1 Introduction 5 6 Software engineering What is software Computer programs and associated documentation Software products may be developed for a particular customer or may be developed for a general market What are the attributes of good software Good software should deliver the required functionality and performance to the user and should be maintainable dependable and usable What is software engineering Software engineering is an engineering discipline that is concerned with all aspects of software production Chapter 1 Introduction 6 7 Software engineering What are the fundamental software engineering activities Software specification software development software validation and software evolution What is the difference between software engineering and computer science Computer science focuses on theory and fundamentals software engineering is concerned with the practicalities of developing and delivering useful software What is the difference between software engineering and system engineering System engineering is concerned with all aspects of computerbased systems development including hardware software and process engineering Software engineering is part of this more general process Chapter 1 Introduction 7 8 Frequently asked questions about software engineering What are the key challenges facing software engineering Coping with increasing diversity demands for reduced delivery times and developing trustworthy software What are the costs of software engineering Roughly 60 of software costs are development costs 40 are testing costs For custom software evolution costs often exceed development costs What are the best software engineering techniques and methods While all software projects have to be professionally managed and developed different techniques are appropriate for different types of system For example games should always be developed using a series of prototypes whereas safety critical control systems require a complete and analyzable specification to be developed You cant therefore say that one method is better than another What differences has the web made to software engineering The web has led to the availability of software services and the possibility of developing highly distributed servicebased systems Webbased systems development has led to important advances in programming languages and software reuse Chapter 1 Introduction 8 9 Importance of software engineering More and more individuals and society rely on advanced software systems We need to be able to produce reliable and trustworthy systems economically and quickly It is usually cheaper in the long run to use software engineering methods and techniques for software systems rather than just write the programs as if it was a personal programming project For most types of system the majority of costs are the costs of changing the software after it has gone into use Chapter 1 Introduction 9 10 Software costs Software costs often dominate govern computer system costs The costs of software on a PC are often greater than the hardware cost Software costs more to maintain than it does to develop For systems with a long life maintenance costs may be several times development costs Software engineering is concerned with cost effective software development 11 Software products Generic products Standalone systems that are marketed and sold to any customer who wishes to buy them Examples PC software such as graphics programs project management tools CAD software software for specific markets such as appointments systems for dentists Customized products Software that is commissioned by a specific customer to meet their own needs Examples embedded control systems air traffic control software traffic monitoring systems Chapter 1 Introduction 11 12 Product specification Generic products The specification of what the software should do is owned by the software developer and decisions on software change are made by the developer Customized products The specification of what the software should do is owned by the customer for the software and they make decisions on software changes that are required Chapter 1 Introduction 12 13 Essential attributes of good software Product Description characteristic Maintainability Software should be written in such a way so that it can evolve to meet the changing needs of customers This is a critical attribute because software change is an inevitable requirement of a changing business environment Dependability and Software dependability includes a range of characteristics security including reliability security and safety Dependable software should not cause physical or economic damage in the event of system failure Malicious users should not be able to access or damage the system Efficiency Software should not make wasteful use of system resources such as memory and processor cycles Efficiency therefore includes responsiveness processing time memory utilisation etc Acceptability Software must be acceptable to the type of users for which it is designed This means that it must be understandable usable and compatible with other systems thatChapter they 1 e usIntroduction 13 14 Software process activities Software specification where customers and engineers define the software that is to be produced and the constraints on its operation Software development where the software is designed and programmed Software validation where the software is checked to ensure that it is what the customer requires Software evolution where the software is modified to reflect changing customer and market requirements Chapter 1 Introduction 14 15 General issues that affect most software Heterogeneity Increasingly systems are required to operate as distributed systems across networks that include different types of computer and mobile devices Business and social change Business and society are changing incredibly quickly as emerging economies develop and new technologies become available They need to be able to change their existing software and to rapidly develop new software Security and trust As software is intertwined with all aspects of our lives it is essential that we can trust that software Chapter 1 Introduction 15 16 Software engineering diversity There are many different types of software system and there is no universal set of software techniques that is applicable to all of these The software engineering methods and tools used depend on the type of application being developed the requirements of the customer and the background of the development team Chapter 1 Introduction 16 17 Application types Standalone applications These are application systems that run on a local computer such as a PC They include all necessary functionality and do not need to be connected to a network Interactive transactionbased applications Applications that execute on a remote computer and are accessed by users from their own PCs or terminals These include web applications such as ecommerce applications Embedded control systems These are software control systems that control and manage hardware devices Numerically there are probably more embedded systems than any other type of system Chapter 1 Introduction 17 18 Application types Batch processing systems These are business systems that are designed to process data in large batches They process large numbers of individual inputs to create corresponding outputs Entertainment systems These are systems that are primarily for personal use and which are intended to entertain the user Systems for modelling and simulation These are systems that are developed by scientists and engineers to model physical processes or situations which include many separate interacting objects Chapter 1 Introduction 18 19 Application types Data collection systems These are systems that collect data from their environment using a set of sensors and send that data to other systems for processing Systems of systems These are systems that are composed of a number of other software systems Chapter 1 Introduction 19 20 Software engineering fundamentals Some fundamental principles apply to all types of software system irrespective of the development techniques used Systems should be developed using a managed and understood development process Of course different processes are used for different types of software Dependability and performance are important for all types of system Understanding and managing the software specification and requirements what the software should do are important Where appropriate you should reuse software that has already been developed rather than write new software Chapter 1 Introduction 20 21 Software engineering and the web The Web is now a platform for running application and organizations are increasingly developing webbased systems rather than local systems Web services allow application functionality to be accessed over the web Cloud computing is an approach to the provision of computer services where applications run remotely on the cloud Chapter 1 Introduction 21 22 Web software engineering Software reuse is the dominant approach for constructing webbased systems When building these systems you think about how you can assemble them from preexisting software components and systems Webbased systems should be developed and delivered incrementally It is now generally recognized that it is impractical to specify all the requirements for such systems in advance User interfaces are constrained by the capabilities of web browsers Chapter 1 Introduction 22 23 Webbased software engineering Webbased systems are complex distributed systems but the fundamental principles of software engineering discussed previously are as applicable to them as they are to any other types of system The fundamental ideas of software engineering discussed in the previous section apply to webbased software in the same way that they apply to other types of software system Chapter 1 Introduction 23 24 Key points Software engineering is an engineering discipline that is concerned with all aspects of software production Essential software product attributes are maintainability dependability and security efficiency and acceptability The highlevel activities of specification development validation and evolution are part of all software processes The fundamental notions of software engineering are universally applicable to all types of system development Chapter 1 Introduction 24 25 Key points There are many different types of system and each requires appropriate software engineering tools and techniques for their development The fundamental ideas of software engineering are applicable to all types of software system Chapter 1 Introduction 25 

